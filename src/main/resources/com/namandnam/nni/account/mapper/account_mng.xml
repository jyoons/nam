<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.namandnam.nni.account.mapper.AccountMapper">

	  <sql id="AccountWhere">
			
			<if test="srchTxt != null and srchTxt != '' ">
				<choose>
					<when test="strKey.equals('name')">
						AND REPLACE(LOWER(NAME), ' ', '') like REPLACE(CONCAT('%', LOWER(#{srchTxt}), '%'), ' ', '')
					</when>
					<when test="strKey.equals('email')">
						AND REPLACE(LOWER(MNGR_ID), ' ', '') like REPLACE(CONCAT('%', LOWER(#{srchTxt}), '%'), ' ', '')
					</when>
					<otherwise>
						AND ( REPLACE(LOWER(NAME), ' ', '') like REPLACE(CONCAT('%', LOWER(#{srchTxt}), '%'), ' ', '')
								OR
							  REPLACE(LOWER(MNGR_ID), ' ', '') like REPLACE(CONCAT('%', LOWER(#{srchTxt}), '%'), ' ', '')  )
					</otherwise>
				</choose>
			</if>
	  </sql>
	
	
	
	<!-- 관리자 리스트 Count-->
	<select id="selectMngUserListCnt" parameterType="MngUser" resultType="Integer">

		SELECT count(1)
		 FROM TBL_MNGR tm, TBL_ROLES tr 
		WHERE tm.ROLES_IDX = tr.IDX 
		<include refid="AccountWhere"/>
		
	</select>
	 
	 
	<!-- 관리자 리스트 -->
	<select id="selectMngUserList" parameterType="MngUser" resultType="MngUser">

		SELECT tm.IDX
			 , tm.ROLES_IDX
			 , tm.MNGR_ID
			 , tm.PSWRD
			 , tm.NAME
			 , tm.IS_LOCK
			 , tm.CMNT
			 , tm.FAIL_CNT
			 , tm.DT_LOGIN
			 , tm.IS_DLT
			 , tm.DT_MDFD
			 , tm.REG
			 , tr.ROLES 
		 FROM TBL_MNGR tm, TBL_ROLES tr 
		WHERE tm.ROLES_IDX = tr.IDX 
		<include refid="AccountWhere"/>
		ORDER BY tm.IDX desc
		
	</select>
	
	
	<!-- 관리자 리스트 Count-->
	<select id="selectOneMngUser" parameterType="String" resultType="MngUser">

		SELECT tm.IDX
			 , tm.ROLES_IDX
			 , tm.MNGR_ID
			 , tm.PSWRD
			 , tm.NAME
			 , tm.IS_LOCK
			 , tm.CMNT
			 , tm.FAIL_CNT
			 , tm.DT_LOGIN
			 , tm.IS_DLT
			 , tm.DT_MDFD
			 , tm.REG
			 , tr.ROLES 
		 FROM TBL_MNGR tm, TBL_ROLES tr 
		WHERE tm.ROLES_IDX = tr.IDX 
		  AND tm.IDX = #{idx}
		
	</select>
	
	<insert id="insertMngUser" parameterType="MngUser"  >
		INSERT INTO reflexion_dev.TBL_MNGR
				( ROLES_IDX
				, MNGR_ID
				, PSWRD
				, NAME
				, IS_LOCK
				, CMNT
				, FAIL_CNT
				, IS_DLT
				, REG)
			VALUES(#{rolesIdx}
				, #{mngrId}
				, #{pswrd}
				, #{name}
				, #{isLock}
				, #{cmnt}
				, 0
				, 'N'
				, now());
	</insert>
	
	
	<update id="updateMngUser" parameterType="MngUser"  >
		UPDATE reflexion_dev.TBL_MNGR
			  SET ROLES_IDX=#{rolesIdx}
			 	<if test="pswrd != null and pswrd != '' ">
				, PSWRD = #{pswrd}
				</if>
				, NAME = #{name}
				, IS_LOCK = #{isLock}
				, CMNT = #{cmnt}
				, DT_MDFD = now()
			WHERE IDX = #{idx};
	</update>
	
	
	
	
	
	
	
	
	<!-- 권한그룹 메뉴 리스트 -->
	<select id="selectAuthMenuList" parameterType="String" resultType="Roles">

		SELECT tm.CODE
		      ,tm.NAME 
		      ,tm.PR_CODE
		      ,IFNULL(trm.ROLES , 0 ) as ROLES
		 FROM TBL_MENU tm 
		 LEFT join TBL_ROLES_MENU trm
		   ON tm.CODE = trm.CODE 
		  AND trm.ROLES_IDX = #{rolesIdx}
		WHERE ( tm.CODE != 'ROOT' AND tm.CODE not like 'CM01%' AND tm.CODE not like 'CM02%')
		  AND PR_CODE != ''
		ORDER by tm.CODE 
		
	</select>
	
	
	
	<!-- 권한그룹별 메뉴 추가 -->  
	<insert id="insertRolesMenu" parameterType="Roles"  >
		INSERT INTO reflexion_dev.TBL_ROLES_MENU
				( ROLES_IDX
				, CODE
				, ROLES
				)
			VALUES
			<foreach collection="authData.entrySet()" item="value" index="key" separator=",">
		    	( #{rolesIdx}
		    	 , #{key}
		    	 , #{value}
		    	)
		    </foreach>
	</insert>
	  
	<!-- 권한그룹에 묶인 메뉴 삭제 -->
	<delete id="deleteRolesMenu" parameterType="String" >
		DELETE FROM reflexion_dev.TBL_ROLES_MENU
		 WHERE ROLES_IDX = #{rolesIdx}
	</delete>
	
	
	
	<!-- 권한그룹 이름 중복 확인 체크 -->
	<select id="selectDuplicationName" parameterType="Roles" resultType="Integer">
		SELECT count(1)
		  FROM TBL_ROLES
		 WHERE UPPER(ROLES) = UPPER( #{roles} )
		
	</select>
	
	
	<!-- 권한그룹 추가 -->  
	<insert id="insertRoles" parameterType="Roles" useGeneratedKeys="true"  keyProperty="idx" >
		INSERT INTO reflexion_dev.TBL_ROLES
				( ROLES )
			VALUES
		    	( #{roles} )
	</insert>
	
	
</mapper>